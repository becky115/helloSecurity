<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:sec="http://www.springframework.org/schema/security" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="authenticationEventPublisher" ref="defaultAuthEventPublisher"/>
			<constructor-arg>
			<list>
				<ref bean="daoAuthenticationProvider"/>
				 <ref bean="anonymousAuthenticationProvider"/>
				<!-- <ref bean="rememberMeAuthenticationProvider"/> -->
			</list>
			</constructor-arg>
	</bean>
	
	<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<constructor-arg name="key" value="fooboar"/>
	</bean>

	<bean id="defaultAuthEventPublisher" class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher"/>

	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<bean id="daoAuthenticationProvider" class="com.becky.security.service.LoginAuthenticationProvider">
		<property name="userDetailsService" ref="userService"></property>
		<property name="passwordEncoder" ref="passwordEncoder"></property>
		
	</bean>
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor" >
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager" ref="accessDecisionManager"/>
		<!-- 
		<property name="securityMetadataSource">
			<sec:filter-security-metadata-source  request-matcher="ant" use-expressions="true">
				<sec:intercept-url pattern="/login/login.do" access="permitAll"/>
				<sec:intercept-url pattern="/resources/**" access="permitAll" />
				<sec:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLEUSER')" />
			
		</property>
		-->
		<property name="securityMetadataSource" ref="filterSecurityMetadataSource"/>
	</bean>
			
	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map request-matcher="ant"><!--   filter-chain-map path-type="ant"> -->
			<sec:filter-chain pattern="/resources/**" filters="none"/>
			<sec:filter-chain pattern="/login/login.do" filters="csrfFilter"/>
			
			<sec:filter-chain pattern="/**" filters="
				securityContextPersistenceFilter,
				csrfFilter,
				logoutFilter,
				usernamePasswordProcessingFilter,
				anonymousAuthFilter,
				exceptionTranslationFilter,
				filterSecurityInterceptor"/>
		</sec:filter-chain-map>
		<!-- securityContextPersistenceFilter,
			logoutFilter,
			usernamePasswordProcessingFilter,
			rememberMeProcessingFilter,
			anonymousProcessingFilter,
			exceptionTranslationFilter,
			filterSecurityInterceptor"
		 -->
	</bean>
	
	<bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
	<constructor-arg>
		<bean class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		 <property name="headerName" value="X-SECURITY" />
		</bean>
	</constructor-arg>
	
	</bean>

 <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<constructor-arg ref="authenticationEntryPoint"></constructor-arg>
	</bean>
<!--	 
	<property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
		<property name="accessDeniedHandler">
		 <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/deniedAccess.jsp"/>
		 </bean>
		</property>
		 -->
		
	<bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg name="loginFormUrl" value="/login/login.do"></constructor-arg>
	</bean>
	
	<bean id="anonymousAuthFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<constructor-arg name="key" value="foobar"/>
		<!-- <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/> -->
	</bean>

	<bean id="authSuccessHandler" class="com.becky.security.handler.AuthSuccessHandler"></bean>
	<bean id="authFailHandler" class="com.becky.security.handler.AuthFailureHandler"></bean>
	
	<bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<constructor-arg ref="httpSessionSecurityContextRepository" />
	</bean>
	
	<bean id="httpSessionSecurityContextRepository"
		class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
		<property name='allowSessionCreation' value='false' />
	</bean>
	
	
	<bean id="usernamePasswordProcessingFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	<!--<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="usernameParameter" value="login_username"/>
		<property name="passwordParameter" value="login_password"/> -->
		<property name="authenticationManager" ref="authenticationManager"/>
<!-- 		<property name="rememberMeServices" ref="rememberMeServices"/> -->
		<property name="authenticationSuccessHandler" ref="authSuccessHandler"/>
		<property name="authenticationFailureHandler" ref="authFailHandler"/>
	</bean>
	
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<!-- the post-logout destination -->
		<constructor-arg value="/"/>
		<!-- Before Remember Me is added -->
		<!-- 
		<constructor-arg ref="logoutHandler"/>
		 -->
		<!-- After Remember Me is added -->
 		<constructor-arg>
			<array>
				<ref bean="logoutHandler"/>
				<!-- <ref local="rememberMeServices"/> -->
			</array>
		</constructor-arg>
		<property name="filterProcessesUrl" value="/logout"/>
	</bean>

	<bean id="logoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter">
					<property name="rolePrefix" value=""/>
				</bean>
				<bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
			</list>
		</constructor-arg>
		<property name="allowIfAllAbstainDecisions" value="false"/>
	</bean>

	<bean id="filterSecurityMetadataSource" class="com.becky.security.filter.FilterSecurityMetadataSource"/>



</beans>
